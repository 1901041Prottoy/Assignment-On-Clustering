from sklearn.cluster import DBSCAN
from sklearn.preprocessing import StandardScaler

# Select the columns you want for clustering
X = data[['Annual Income (k$)', 'Spending Score (1-100)']].values

# Standardize the data
scaler = StandardScaler()
X = scaler.fit_transform(X)

# Perform DBSCAN clustering
dbscan = DBSCAN(eps=0.4, min_samples=5)
labels = dbscan.fit_predict(X)

# Add cluster labels to the DataFrame
data['Cluster'] = labels

# Plot the clusters
plt.figure(figsize=(8, 6))
for cluster in data['Cluster'].unique():
    plt.scatter(data[data['Cluster'] == cluster]['Annual Income (k$)'],
                data[data['Cluster'] == cluster]['Spending Score (1-100)'],
                label=f'Cluster {cluster}' if cluster != -1 else 'Noise', alpha=0.6)

plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('DBSCAN Clustering')
plt.legend()
plt.show()
